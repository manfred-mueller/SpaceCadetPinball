name: Build (Windows) + Extract XP Pinball

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      TRIPLET: x64-windows
      BUILD_TYPE: Release
      RUNTIME_DIR: ${{ github.workspace }}\build\bin
      # VCPKG Release 2025.08.27 (voller SHA):
      VCPKG_BASELINE: 120deac3062162151622ca4860575a33844ba10b

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Manifest inkl. builtin-baseline erzeugen
      - name: Ensure vcpkg.json (with builtin-baseline)
        shell: pwsh
        run: |
          $obj = [ordered]@{
            name = "spacecadetpinball"
            "version-string" = "0"
            "builtin-baseline" = "${{ env.VCPKG_BASELINE }}"
            dependencies = @("sdl2","sdl2-mixer")
          }
          $json = $obj | ConvertTo-Json -Depth 4
          Set-Content -Path "vcpkg.json" -Value $json -Encoding utf8
          Get-Content vcpkg.json

      # vcpkg einrichten (auf exakt denselben Commit pinnen)
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ env.VCPKG_BASELINE }}
          runVcpkgInstall: true
          vcpkgJsonGlob: vcpkg.json

      - name: Ensure 7-Zip
        shell: pwsh
        run: |
          if (-not (Get-Command 7z.exe -ErrorAction SilentlyContinue)) { choco install 7zip -y }

      # -------- Build ----------
      - name: Configure (CMake)
        shell: pwsh
        run: |
          cmake -S . -B build `
            -A x64 `
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY="${{ env.RUNTIME_DIR }}" `
            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_${{ env.BUILD_TYPE }}="${{ env.RUNTIME_DIR }}" `
            -DCMAKE_TOOLCHAIN_FILE="$Env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake" `
            -DVCPKG_TARGET_TRIPLET=${{ env.TRIPLET }}

      - name: Build
        shell: pwsh
        run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

      - name: Verify binary path
        shell: pwsh
        run: |
          if (-not (Test-Path "${{ env.RUNTIME_DIR }}\SpaceCadetPinball.exe")) {
            Get-ChildItem -Recurse build | Select-Object FullName
            throw "EXE nicht gefunden: $Env:RUNTIME_DIR\SpaceCadetPinball.exe"
          }

      # -------- ISO laden & PINBALL extrahieren ----------
      - name: Download Windows XP ISO (DE SP3 VL)
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path iso | Out-Null
          Invoke-WebRequest `
            -Uri "https://archive.org/download/windows-xp-all-sp-msdn-iso-files-en-de-ru-tr-x86-x64/de_windows_xp_professional_with_service_pack_3_x86_cd_vl_x14-73985.iso" `
            -OutFile "iso\xp.iso"

      - name: Extract PINBALL directory from ISO
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path iso\extracted | Out-Null
          7z x "iso\xp.iso" -o"iso\extracted" -ir!'I386\PINBALL\*'
          if (-not (Test-Path "iso\extracted\I386\PINBALL")) { throw "PINBALL-Ordner nicht in ISO gefunden." }

      # -------- Dist-Ordner & DLLs ----------
      - name: Prepare dist folder
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item "${{ env.RUNTIME_DIR }}\SpaceCadetPinball.exe" dist\SpaceCadetPinball.exe
          New-Item -ItemType Directory -Force -Path dist\PINBALL | Out-Null
          Copy-Item "iso\extracted\I386\PINBALL\*" dist\PINBALL\ -Recurse -Force
          @('PINBALL.DLL','TABLES.DAT','SOUNDS.DAT','PINBALL.MID') | ForEach-Object {
            $src = "dist\PINBALL\$_"; if (Test-Path $src) { Copy-Item $src dist\ -Force }
          }
          $vcpkgBin = Join-Path $Env:VCPKG_ROOT "installed\${{ env.TRIPLET }}\bin"
          if (Test-Path $vcpkgBin) { Copy-Item "$vcpkgBin\*.dll" dist\ -Force }

      - name: Upload artifact (Windows exe + resources)
        uses: actions/upload-artifact@v4
        with:
          name: SpaceCadetPinball-Windows-Release-with-XP-resources
          path: dist\**
          if-no-files-found: error
